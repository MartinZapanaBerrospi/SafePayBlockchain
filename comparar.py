# comparar.py
"""
Script para comparar dos bloques PEM (clave privada descifrada) y mostrar diferencias byte a byte y visualmente.
Pega aquí el bloque PEM del backend (Python) y el del frontend (copiado de la consola JS).
"""

def limpiar_pem(pem: str) -> str:
    """Elimina headers, footers, saltos de línea y espacios."""
    lines = pem.strip().splitlines()
    base64_lines = [line for line in lines if not line.startswith('-----')]
    return ''.join(base64_lines)

# Pega aquí los bloques PEM (con o sin headers)
pem_backend = '''
\x2d2d2d2d2d424547494e2050524956415445204b45592d2d2d2d2d0a4d494945765149424144414e42676b71686b6947397730424151454641415343424b63776767536a41674541416f4942415144464c61342f725863434d4577420a576a676e495a786637436b693670527a62317433387a435636684669344b55664b5a72624f74794a324359502f6e724a53434d2b343253656b4b2f49465168310a7050794c76426e6f5a3974374b546545502f4434396e384b677655344d6f544b306b4a3169543742373234496d3569623166367756543154795733483933725a0a4f674e2b77396f346767714351792b4649784e6f4169797957437144433658654d4e706e6a522b706d5a4534574d796a5a68474c36545176676c486f627770670a784f6a6f4d454162544d2f694e6c42305357774e6b4b304e6e4f6377334437334e366f4439533245714c49467637397467643352594e6d637066706f566b48640a78542f376e3743783868566339356c6b3179396b666b5964434c6b6e366d7943534c744b3953506b52576e625775374949476a36325273514e4a3443496253770a57666d2f68354b4a41674d4241414543676745414c73472b4666594871454a314a345879466c3972516a6a5261576a34676d595836646f4766616f33624c764b0a46426c7330677444644547494278646f6e50586f2b3762323633337958513856786a58314f427148427a776e694f3156623577744135434b51423864554c48300a474e6469734a5832786f7a46436a41426349532b684368325a6a6d332b576a33586538616d4a4d50576f4b46784f317a4a59355467674377416975546979624c0a6963437874764e476241564f715371385435364a513273492f72426c534a6d536b6734795843623356344f7035546a644d654336744954657578647a67664d6d0a5a686c627a7531426e716d6e76726e32577a756953723947576d416949544c6e4d676a30363552314356523741476a4547784636322b2f57727334542f6647390a774249556d4436452b534f3331444d765938575132735a4463786b594a453762512f7578787a74367a514b4267514471346438354c76717447737a6e5155584d0a5269614b50626e6551334d6c66726a6d306c50614f4775536733796a3343714d597a4e7748553165326241616150375736755a76596b324154466e7a313371780a4741614a43504a364a37367059394e6f583345304955754a4755456c62504f494875753475463468757852696d6649754b7155507069454c4e3178506c3674740a54444e38305a47636f4354624e6e4f694934497a4d71497333514b42675144573641454a657131375131416e76567273454673452f56736f7251485a2f74412f0a35323641575046686e646557457371706e497a576d6c667a4e6a4d4a314b5163776c52614a74447263586a5544774138504941364d5a4a712b686333476250760a713868564d6f34596a56494e626770356f3743646d45734c4b68794578755662764c444771486147395661686777437a3969336a704c414679666b2f4d6951560a49587873354f58626e514b426746397165474c6a65635065636b537a57475a6554514f316859384c2b58664f3364417575772b5941654d5839516366786b30580a6332726c4447777570494a6d43726846336d78374535363935594451465442683453334436375442396f736257574d352b6d504237737833374f59474e3377680a69344b5471764771374f494e5262754a6156704e45336c5a2b4f384158777863653049475a452b72497133476c667a557a657838636a4d6c416f4741656a4e2b0a73336377777043714f5936773774373241735a5757624458427243676c6c587850635a567135356e676f7934394f3179494732766154722b6c71353169327a740a4c6a34344f6b6c5233624f522f4b366963335451763066716634683843754c786a5a437277455a4c7a4273776c613641745878743337465965682f6e4e397a350a34467a5732544d5579633647546337456c566547534352724f495934676c4f43507947426d766b43675945416e5057417643717344385a7964626436784e41590a30384f7370666f5a48532b4b756b43497868414c316256683865476a474b395972794e306533654f626f78484452746d74665a484e506448326a4241597341460a44675233527767416f4e4b6d79624f4a356b48766f31482b5079777067682f766f57794d495762744f4e583858707a68613035506e61736d4d593358516439470a6a67343170566a58412b374e65394d4a4d4c594e3273383d0a2d2d2d2d2d454e442050524956415445204b45592d2d2d2d2d0a
'''

pem_frontend = '''
\x2d2d2d2d2d424547494e2050524956415445204b45592d2d2d2d2d0a4d494945765149424144414e42676b71686b6947397730424151454641415343424b63776767536a41674541416f4942415144464c61342f725863434d4577420a576a676e495a786637436b693670527a62317433387a435636684669344b55664b5a72624f74794a324359502f6e724a53434d2b343253656b4b2f49465168310a7050794c76426e6f5a3974374b546545502f4434396e384b677655344d6f544b306b4a3169543742373234496d3569623166367756543154795733483933725a0a4f674e2b77396f346767714351792b4649784e6f4169797957437144433658654d4e706e6a522b706d5a4534574d796a5a68474c36545176676c486f627770670a784f6a6f4d454162544d2f694e6c42305357774e6b4b304e6e4f6377334437334e366f4439533245714c49467637397467643352594e6d637066706f566b48640a78542f376e3743783868566339356c6b3179396b666b5964434c6b6e366d7943534c744b3953506b52576e625775374949476a36325273514e4a3443496253770a57666d2f68354b4a41674d4241414543676745414c73472b4666594871454a314a345879466c3972516a6a5261576a34676d595836646f4766616f33624c764b0a46426c7330677444644547494278646f6e50586f2b3762323633337958513856786a58314f427148427a776e694f3156623577744135434b51423864554c48300a474e6469734a5832786f7a46436a41426349532b684368325a6a6d332b576a33586538616d4a4d50576f4b46784f317a4a59355467674377416975546979624c0a6963437874764e476241564f715371385435364a513273492f72426c534a6d536b6734795843623356344f7035546a644d654336744954657578647a67664d6d0a5a686c627a7531426e716d6e76726e32577a756953723947576d416949544c6e4d676a30363552314356523741476a4547784636322b2f57727334542f6647390a774249556d4436452b534f3331444d765938575132735a4463786b594a453762512f7578787a74367a514b4267514471346438354c76717447737a6e5155584d0a5269614b50626e6551334d6c66726a6d306c50614f4775536733796a3343714d597a4e7748553165326241616150375736755a76596b324154466e7a313371780a4741614a43504a364a37367059394e6f583345304955754a4755456c62504f494875753475463468757852696d6649754b7155507069454c4e3178506c3674740a54444e38305a47636f4354624e6e4f694934497a4d71497333514b42675144573641454a657131375131416e76567273454673452f56736f7251485a2f74412f0a35323641575046686e646557457371706e497a576d6c667a4e6a4d4a314b5163776c52614a74447263586a5544774138504941364d5a4a712b686333476250760a713868564d6f34596a56494e626770356f3743646d45734c4b68794578755662764c444771486147395661686777437a3969336a704c414679666b2f4d6951560a49587873354f58626e514b426746397165474c6a65635065636b537a57475a6554514f316859384c2b58664f3364417575772b5941654d5839516366786b30580a6332726c4447777570494a6d43726846336d78374535363935594451465442683453334436375442396f736257574d352b6d504237737833374f59474e3377680a69344b5471764771374f494e5262754a6156704e45336c5a2b4f384158777863653049475a452b72497133476c667a557a657838636a4d6c416f4741656a4e2b0a73336377777043714f5936773774373241735a5757624458427243676c6c587850635a567135356e676f7934394f3179494732766154722b6c71353169327a740a4c6a34344f6b6c5233624f522f4b366963335451763066716634683843754c786a5a437277455a4c7a4273776c613641745878743337465965682f6e4e397a350a34467a5732544d5579633647546337456c566547534352724f495934676c4f43507947426d766b43675945416e5057417643717344385a7964626436784e41590a30384f7370666f5a48532b4b756b43497868414c316256683865476a474b395972794e306533654f626f78484452746d74665a484e506448326a4241597341460a44675233527767416f4e4b6d79624f4a356b48766f31482b5079777067682f766f57794d495762744f4e583858707a68613035506e61736d4d593358516439470a6a67343170566a58412b374e65394d4a4d4c594e3273383d0a2d2d2d2d2d454e442050524956415445204b45592d2d2d2d2d0a
'''

b64_backend = limpiar_pem(pem_backend)
b64_frontend = limpiar_pem(pem_frontend)

print('Longitud base64 backend:', len(b64_backend))
print('Longitud base64 frontend:', len(b64_frontend))

if b64_backend == b64_frontend:
    print('\n¡Los bloques PEM son idénticos!')
else:
    print('\nLos bloques PEM son diferentes.')
    # Mostrar diferencias byte a byte
    minlen = min(len(b64_backend), len(b64_frontend))
    for i in range(minlen):
        if b64_backend[i] != b64_frontend[i]:
            print(f'Diferencia en posición {i}: backend={b64_backend[i]!r}, frontend={b64_frontend[i]!r}')
            print('Contexto backend:', b64_backend[max(0,i-10):i+10])
            print('Contexto frontend:', b64_frontend[max(0,i-10):i+10])
            break
    if len(b64_backend) != len(b64_frontend):
        print(f'Longitudes distintas: backend={len(b64_backend)}, frontend={len(b64_frontend)}')

# También puedes comparar los bytes DER
import base64 as b64
try:
    der_backend = b64.b64decode(b64_backend)
    der_frontend = b64.b64decode(b64_frontend)
    if der_backend == der_frontend:
        print('\n¡Los bytes DER son idénticos!')
    else:
        print('\nLos bytes DER son diferentes.')
        minlen = min(len(der_backend), len(der_frontend))
        for i in range(minlen):
            if der_backend[i] != der_frontend[i]:
                print(f'Diferencia DER en byte {i}: backend={der_backend[i]}, frontend={der_frontend[i]}')
                print('Contexto backend:', der_backend[max(0,i-10):i+10])
                print('Contexto frontend:', der_frontend[max(0,i-10):i+10])
                break
        if len(der_backend) != len(der_frontend):
            print(f'Longitudes DER distintas: backend={len(der_backend)}, frontend={len(der_frontend)}')
except Exception as e:
    print('Error al decodificar base64:', e)
